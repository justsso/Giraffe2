---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${SERVICE_TIGER}
  labels:
    app: ${SERVICE_TIGER}
spec:
  replicas: ${TIGER_SCALE}
  selector:
    matchLabels:
      app: {{ project }}-{{ role }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ project }}-{{ role }}
    spec:
      containers:
      - env:
        - name: NODE_ENV
          value: production
        - name: NPM_CONFIG_LOGLEVEL
          value: info
        - name: TIGER_HOST
          value: ${TIGER_HOST}
        - name: TIGER_SESSION_SECRET
          value: ${TIGER_SESSION_SECRET}
        - name: TIGER_SESSION_MAX_AGE
          value: '${TIGER_SESSION_MAX_AGE}'
        - name: TIGER_REDIS_SERVER
          value: ${TIGER_REDIS_SERVER}
        - name: TIGER_REDIS_PORT
          value: '${TIGER_REDIS_PORT}'
        - name: TIGER_REDIS_PWD
          value: ${TIGER_REDIS_PWD}
        - name: TIGER_RABBITMQ_URL
          value: ${TIGER_RABBITMQ_URL}
        - name: WXAPP_EPC_APP_ID
          value: ${WXAPP_EPC_APP_ID}
        - name: WXAPP_EPC_APP_SECRET
          value: ${WXAPP_EPC_APP_SECRET}
        - name: SERVICE_CLASSIC_WEBHOST
          value: ${SERVICE_CLASSIC_WEBHOST}
        - name: SERVICE_POP_CORE_APPHOST
          value: ${SERVICE_POP_CORE_APPHOST}
        - name: SERVICE_FORT_WEBHOST
          value: ${SERVICE_FORT_WEBHOST}
        - name: SERVICE_LISA_APP
          value: ${SERVICE_LISA_APP}
        image: {{ image_name }}
        imagePullPolicy: IfNotPresent
        name: {{ project }}-{{ role }}
      imagePullSecrets:
      - name: default-secret
      nodeSelector:
        envnode: ${ENV_NODE_LABEL}

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: ${SERVICE_TIGER}
  name: ${SERVICE_TIGER}
spec:
  selector:
    app: {{ project }}-{{ role }}
  ports:
  - name: "80"
    port: 80
    protocol: TCP
    targetPort: 8888
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: ingress-${SERVICE_TIGER}
  annotations:
    kubernetes.io/ingress.class: "nginx"
spec:
  rules:
    - host: ${HOST_I_TIGER}
      http:
        paths:
          - backend:
              serviceName: ${SERVICE_TIGER}
              servicePort: 80
            path:
